rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Medical documents - users can only access their own documents
    match /medical-documents/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }

    // Lab results - users can only access their own lab results
    match /lab-results/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }

    // Profile images - users can only access their own images
    match /profile-images/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }

    // Emergency documents - accessible by emergency contacts
    match /emergency-documents/{userId}/{allPaths=**} {
      allow read: if request.auth != null && 
        (request.auth.uid == userId || 
         // Allow emergency contacts to read (would need additional verification)
         resource.metadata.emergencyAccess == 'true');
      allow write: if request.auth != null && 
        request.auth.uid == userId;
    }

    // File size limits
    function isValidFileSize() {
      return request.resource.size < 50 * 1024 * 1024; // 50MB limit
    }

    // File type validation
    function isValidFileType() {
      return request.resource.contentType.matches('image/.*') ||
             request.resource.contentType.matches('application/pdf') ||
             request.resource.contentType.matches('text/.*') ||
             request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.*');
    }

    // Apply size and type validation to all uploads
    match /{allPaths=**} {
      allow write: if request.auth != null && 
        isValidFileSize() && 
        isValidFileType();
    }
  }
} 